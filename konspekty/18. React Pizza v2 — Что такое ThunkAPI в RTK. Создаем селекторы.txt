thunkApi
селекторы для redux

createAsynkThunk получает тип мы задаем ему какой-то тип
что и как определять внутри экстра-редьюсера мы передаем ему ключи и он сам уже по префиксу, который мы ему даем прикручиваюет всю логику

thunkApi - это такая дополнительная утилита к createAsynkThunk
мы можем взять какие-то параметры и эти параметры получает асинхронный экшен

thunkApi в дополнительный параметрах - вот тут уже reduxToolkit прикручиваюет свою логику
если в params мы получим какие-то параметры которым мы будем передавать нашу асинхронную функцию
вторым параметров reduxToolkit прикрутит дополнительные функции свойства логику для того чтобы мы ее смогли использовать уже внутри функции
в этом объекте thunkApi есть разные функции

Если стоит задача, что у нас асинхронная функция делает несколько await'ов и мы не знаем при каком await'е мы хотим что-то вернуть в наш payload мы можем с помощью thunkApi.rejectWithValue вернуть какой-то специфичный payload

В компонентах в redux когда работаешь в связке этих двух вещей redux и react обычно в более сложных больших приложениях может даже и в маленьких есть best-practice написания какого-то определенного кода
Одна из практик: при использование useSelector когда мы хотим вытащить данные их вытаскивают с помощью анонимной функции но иногда необходимо повторять функции
вместо того чтобы писать анонимные функции мы можем создать селекторы в redux по факту это просто обычне функции
